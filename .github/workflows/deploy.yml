name: terraform build
on: 
  workflow_dispatch:
  push:
    branches: [main] 


jobs:
  terraform-plan:
    name: terraform plan 
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Auth on GCP with service account key 
        uses: google-github-actions/auth@v0.4.1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Set up Google Cloud SDK 
        uses: google-github-actions/setup-gcloud@v0.3.0
        
      - name: Install terraform 
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform init 
        run: |
          terraform version 
          terraform init 
          terraform workspace select gke_admin
          

      - name: Terraform validate 
        run: terraform validate 

      - name: Terraform plan 
        id: plan 
        run: terraform plan -lock-timeout=600s -input=false -out=plan_output

      - name: Upload terraform plan 
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: plan_output
          if-no-files-found: error
          retention-days: 1
  
  terraform-apply:
    name: terraform apply 
    needs: terraform-plan
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Auth on GCP with service account key 
        uses: google-github-actions/auth@v0.4.1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Set up Google Cloud SDK 
        uses: google-github-actions/setup-gcloud@v0.3.0
        
      - name: Install terraform 
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform init 
        run: |
          terraform version 
          terraform init 
          terraform workspace select gke_admin

      - name: Download terraform plan 
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          

      - name: Terraform apply 
        run: |
          terraform apply -auto-approve -lock-timeout=600s -input=false plan_output